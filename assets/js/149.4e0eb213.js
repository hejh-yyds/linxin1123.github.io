(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{472:function(s,t,a){"use strict";a.r(t);var l=a(3),_=Object(l.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-foreach-forin-forof"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-foreach-forin-forof"}},[s._v("#")]),s._v(" 1. forEach，forin，forof")]),s._v(" "),t("ul",[t("li",[s._v("forEach\n"),t("ul",[t("li",[s._v("数组使用，无返回值，无法break跳出")])])]),s._v(" "),t("li",[s._v("forin\n"),t("ul",[t("li",[s._v("数组，对象使用")])])]),s._v(" "),t("li",[s._v("forof\n"),t("ul",[t("li",[s._v("数组，对象，map，set，类数组（伪数组）")])])]),s._v(" "),t("li",[s._v("共同点\n"),t("ul",[t("li",[s._v("无下标，操作更简洁，效率高")])])])]),s._v(" "),t("h2",{attrs:{id:"_2-var-let-const"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-var-let-const"}},[s._v("#")]),s._v(" 2. var，let，const")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("var")]),s._v(" "),t("ul",[t("li",[s._v("变量提升")]),s._v(" "),t("li",[s._v("直接赋值，全局作用域")])])]),s._v(" "),t("li",[t("p",[s._v("let，const")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("不存在变量提升")])]),s._v(" "),t("li",[t("p",[s._v("不可以重复生命")])]),s._v(" "),t("li",[t("p",[s._v("暂时性死区")]),s._v(" "),t("ul",[t("li",[t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \n    fullname"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'999'")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" fullname\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])])])]),s._v(" "),t("li",[t("p",[s._v("const 定义后必须立即赋值")])]),s._v(" "),t("li",[t("p",[s._v("const 简单数据类型不可修改，引用数据类型其地址不变的情况下，可以修改其中的内容")])])])]),s._v(" "),t("li",[t("p",[s._v("图解")])])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img2023.cnblogs.com/blog/3089561/202302/3089561-20230205100319469-1139401690.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"_3-箭头函数与普通函数的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-箭头函数与普通函数的区别"}},[s._v("#")]),s._v(" 3. 箭头函数与普通函数的区别")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img2023.cnblogs.com/blog/3089561/202302/3089561-20230205100318997-1605348637.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"_4-es6中的数组去重"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-es6中的数组去重"}},[s._v("#")]),s._v(" 4. es6中的数组去重")]),s._v(" "),t("ul",[t("li",[s._v("Array.from(new Set(array))")])]),s._v(" "),t("h2",{attrs:{id:"_5-es6中object新增的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-es6中object新增的方法"}},[s._v("#")]),s._v(" 5.es6中Object新增的方法")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Object.is() ：判断变量是否相等，返回true或false")]),s._v(" "),t("ul",[t("li",[s._v("简单数据类型，判断类型和值")]),s._v(" "),t("li",[s._v("复杂数据类型，判断地址")]),s._v(" "),t("li",[s._v("可以比较一些特殊的值 Object.is(NaN,NaN)=true\n"),t("ul",[t("li",[s._v("NaN===NaN  ==> false")])])])])]),s._v(" "),t("li",[t("p",[s._v("Object.assign()")]),s._v(" "),t("ul",[t("li",[s._v("合并对象的属性")])])]),s._v(" "),t("li",[t("p",[s._v("Object.keys()")]),s._v(" "),t("ul",[t("li",[s._v("获取对象的所有键")])])]),s._v(" "),t("li",[t("p",[s._v("Object.values()")]),s._v(" "),t("ul",[t("li",[s._v("获取对象的所有的键值")])])]),s._v(" "),t("li",[t("p",[s._v("Object.entries()")]),s._v(" "),t("ul",[t("li",[s._v("获取对象的所有可遍历的键值对数组\n"),t("ul",[t("li",[s._v("二维数组，每一项是一个数组，包含键和值")])])])])])]),s._v(" "),t("h2",{attrs:{id:"_6-function与class的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-function与class的区别"}},[s._v("#")]),s._v(" 6. function与class的区别")]),s._v(" "),t("ul",[t("li",[s._v("相同点\n"),t("ul",[t("li",[s._v("作为构造函数")])])]),s._v(" "),t("li",[s._v("不同点\n"),t("ul",[t("li",[s._v("class 不可提供apply，bind，call改变执行上下文")])])])]),s._v(" "),t("h2",{attrs:{id:"_7-promise"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-promise"}},[s._v("#")]),s._v(" 7. Promise")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Promise是异步编程的一种解决方案，比传统的解决方案--事件和回调函数更加合理和强大")])]),s._v(" "),t("li",[t("p",[s._v("Promise对象的三个状态")]),s._v(" "),t("ul",[t("li",[s._v("pending：进行中")]),s._v(" "),t("li",[s._v("fullfilled：成功态")]),s._v(" "),t("li",[s._v("rejected：失败态")])])]),s._v(" "),t("li",[t("p",[s._v("Promise对象的原型函数")]),s._v(" "),t("ul",[t("li",[s._v("prototype.then()\n"),t("ul",[t("li",[s._v("回调函数，接收两个参数，第一个为成功态的回调函数，第二个为失败态的回调函数")]),s._v(" "),t("li",[s._v("返回值为新的Promise对象")])])])])])])])}),[],!1,null,null,null);t.default=_.exports}}]);